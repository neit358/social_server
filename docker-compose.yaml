services:
  app:
    # image: node:20-alpine
    # command: sh -c "npm install && npm run start"
    # build: # Neu khong dung build thi thay bang image: social_server neu image da co san
    #   context: .
    #   dockerfile: Dockerfile
    image: social_server_app:latest
    container_name: social_server
    ports:
      - '3001:3001'
    # working_dir: /app
    # volumes:
    #   - ./.:/app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: social_db
      REDIS_HOST: redis_cache
      REDIS_PORT: 6379
      REDIS_URL: redis://redis_cache:6379
      BEANSTALKD_HOST: beanstalkd
      BEANSTALKD_PORT: 11300
      ELASTICSEARCH_NODE: http://elasticsearch:9200
      JWT_SECRET: jwt_secret
      JWT_ACCESS_TOKEN: jwt_access_token
      JWT_REFRESH_TOKEN: jwt_refresh_token
      NODE_ENV: development
      CLIENT_URL: http://localhost:3000
      MICROSERVICE_PORT: 3000
      SOCKET_URL: http://localhost:3002
      JAEGER_TRACES: http://localhost:14268
    depends_on:
      - postgres
      - redis_cache
      - elasticsearch
      - kibana
      - beanstalkd
      - jaeger
    networks:
      - social_network

  postgres:
    image: postgres:latest
    container_name: social_db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: social_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - social_network

  redis_cache:
    image: redis:latest
    container_name: social_redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - 'cache:/data'
    networks:
      - social_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    container_name: social_elasticsearch
    environment:
      - node.name=social_node
      - cluster.name=social_cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - social_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.0
    container_name: social_kibana
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    networks:
      - social_network

  beanstalkd:
    image: schickling/beanstalkd
    container_name: social_beanstalkd
    ports:
      - '11300:11300'
    volumes:
      - beanstalkd_data:/var/lib/beanstalkd
    networks:
      - social_network

  jaeger:
    image: jaegertracing/jaeger:2.0.0
    container_name: social_jaeger
    ports:
      - '16686:16686' # UI
      - '14268:14268' # HTTP endpoint for OpenTelemetry
      - '14250:14250' # gRPC
      - '6831:6831/udp' # UDP (agent Thrift)
      - '5778:5778' # config for agents
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - social_network

volumes:
  pgdata:
    driver: local
  cache:
    driver: local
  esdata:
    driver: local
  beanstalkd_data:
    driver: local

networks:
  social_network:
    driver: bridge
